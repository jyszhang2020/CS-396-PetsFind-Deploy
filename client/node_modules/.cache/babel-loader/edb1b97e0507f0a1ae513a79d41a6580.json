{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Desktop/CS396-PetsFinder/client/src/component/ListPet.js\";\nimport React, { Component } from 'react';\nimport '../styles/ListPet.css';\nimport { Form, Input, TextArea, Button, Select } from 'semantic-ui-react';\nimport { speciesOption, genderOption } from './DropdownOptions';\nimport { catBreedOption, dogBreedOption, locationOption } from './DropdownOptions';\nimport { storage } from '../../firebase/firebase';\nimport history from './history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListPet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = (value, state) => {\n      this.setState({\n        [state]: value,\n        [state + \"_error\"]: false\n      });\n    };\n\n    this.handleChangeImage = e => {\n      this.setState({\n        image: e.target.files[0]\n      });\n    };\n\n    this.isDOBValid = () => {\n      var regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\n      if (!this.state.dob.match(regEx)) return false; // Invalid format\n\n      var d = new Date(this.state.dob);\n      var dNum = d.getTime();\n      if (!dNum && dNum !== 0) return false; // NaN value, Invalid date\n\n      return d.toISOString().slice(0, 10) === this.state.dob;\n    };\n\n    this.isPriceValid = () => {\n      return !isNaN(this.state.price) && !isNaN(parseInt(this.state.price));\n    };\n\n    this.isContactValid = () => {\n      let valid = true;\n\n      if (this.state.contact_phone.length !== 10) {\n        valid = false;\n      }\n\n      for (var i = 0; i < this.state.contact_phone.length; i++) {\n        if (isNaN(this.state.contact_phone[i]) || isNaN(parseInt(this.state.contact_phone[i]))) {\n          valid = false;\n        }\n      }\n\n      return valid;\n    };\n\n    this.validateForm = () => {\n      let err = false;\n\n      if (this.state.name === '') {\n        this.setState({\n          name_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.species === '') {\n        this.setState({\n          species_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.sex === '') {\n        this.setState({\n          sex_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.dob === '' || !this.isDOBValid()) {\n        this.setState({\n          dob_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.price === '' || !this.isPriceValid()) {\n        this.setState({\n          price_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.detail === '') {\n        this.setState({\n          detail_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.contact_phone === '' || !this.isContactValid()) {\n        this.setState({\n          contact_phone_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.location === '') {\n        this.setState({\n          location_error: true\n        });\n        err = true;\n      }\n\n      if (this.state.term_condition === false) {\n        this.setState({\n          term_condition_error: true\n        });\n        err = true;\n      }\n\n      return !err;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.validateForm()) {\n        const uploadTask = storage.ref(`/images/${this.state.name}_${this.state.contact_phone}`).put(this.state.image);\n        uploadTask.on('state_changed', snapShot => {\n          //takes a snap shot of the process as it is happening\n          console.log(snapShot);\n        }, err => {\n          //catches the errors\n          console.log(err);\n        }, () => {\n          // gets the functions from storage refences the image storage in firebase by the children\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\n          storage.ref('images').child(`${this.state.name}_${this.state.contact_phone}`).getDownloadURL().then(fireBaseUrl => {\n            fetch('http://localhost:8081/listpet', {\n              method: 'POST',\n              body: JSON.stringify({\n                species: this.state.species,\n                breed: this.state.breed,\n                name: this.state.name,\n                sex: this.state.sex,\n                dob: this.state.dob,\n                price: this.state.price,\n                contact_phone: this.state.contact_phone,\n                detail: this.state.detail,\n                image_url: fireBaseUrl,\n                location: this.state.location\n              }),\n              headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE'\n              }\n            }).then(async response => {\n              if (response.status === 201) {\n                let pet = await response.json();\n                console.log(pet);\n                localStorage.setItem(\"selectedPetID\", pet._id);\n                history.push('/allpets/' + pet._id);\n              } else {\n                alert(\"Submit failed\");\n              }\n            }).catch(err => console.log(err));\n          });\n        });\n      }\n    };\n\n    this.getBreedOptions = () => {\n      if (this.state.species === \"Cat\") {\n        return catBreedOption;\n      } else if (this.state.species === \"Dog\") {\n        return dogBreedOption;\n      }\n\n      return [];\n    };\n\n    this.state = {\n      species: '',\n      breed: '',\n      name: '',\n      sex: '',\n      dob: '',\n      price: '',\n      contact_phone: '',\n      detail: '',\n      image: '',\n      location: '',\n      term_condition: false,\n      name_error: false,\n      species_error: false,\n      sex_error: false,\n      dob_error: false,\n      price_error: false,\n      detail_error: false,\n      contact_phone_error: false,\n      location_error: false,\n      term_condition_error: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"smallest-page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Having a pet to sell? List your pet here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            label: \"Pet Name\",\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"name\"),\n            placeholder: \"e.g. Max\",\n            error: this.state.name_error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Pet Species\",\n            options: speciesOption,\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"species\"),\n            placeholder: \"e.g. Cat\",\n            error: this.state.species_error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            options: this.getBreedOptions(),\n            label: \"Pet Breed\",\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"breed\"),\n            placeholder: \"e.g. Ragdoll\",\n            search: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Pet Sex\",\n            options: genderOption,\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"sex\"),\n            placeholder: \"e.g. Male\",\n            error: this.state.sex_error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            label: \"Pet DOB (YYYY-MM-DD)\",\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"dob\"),\n            placeholder: \"e.g. 2021-02-03\",\n            error: this.state.dob_error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            label: \"Pet Price ($)\",\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"price\"),\n            placeholder: \"e.g. 1500\",\n            error: this.state.price_error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          control: TextArea,\n          label: \"Details about the pet\",\n          onChange: (event, {\n            value\n          }) => this.handleChange(value, \"detail\"),\n          placeholder: \"e.g. temperament, parents...\",\n          error: this.state.detail_error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Input,\n            label: \"Contact Number\",\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"contact_phone\"),\n            placeholder: \"e.g. 2179792367\",\n            error: this.state.contact_phone_error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            control: Select,\n            label: \"Location\",\n            options: locationOption,\n            onChange: (event, {\n              value\n            }) => this.handleChange(value, \"location\"),\n            search: true,\n            placeholder: \"e.g. Illinois\",\n            error: this.state.location_error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          label: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"file\",\n          id: \"input-file\",\n          onChange: this.handleChangeImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Checkbox, {\n          label: \"I agree to the Terms and Conditions\",\n          onChange: (event, {\n            checked\n          }) => this.handleChange(checked, \"term_condition\"),\n          error: this.state.term_condition_error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          id: \"list-pet-submit-button\",\n          control: Button,\n          content: \"Submit\",\n          onClick: this.handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListPet;","map":{"version":3,"sources":["/Users/jerry/Desktop/CS396-PetsFinder/client/src/component/ListPet.js"],"names":["React","Component","Form","Input","TextArea","Button","Select","speciesOption","genderOption","catBreedOption","dogBreedOption","locationOption","storage","history","ListPet","constructor","props","handleChange","value","state","setState","handleChangeImage","e","image","target","files","isDOBValid","regEx","dob","match","d","Date","dNum","getTime","toISOString","slice","isPriceValid","isNaN","price","parseInt","isContactValid","valid","contact_phone","length","i","validateForm","err","name","name_error","species","species_error","sex","sex_error","dob_error","price_error","detail","detail_error","contact_phone_error","location","location_error","term_condition","term_condition_error","handleSubmit","preventDefault","uploadTask","ref","put","on","snapShot","console","log","child","getDownloadURL","then","fireBaseUrl","fetch","method","body","JSON","stringify","breed","image_url","headers","response","status","pet","json","localStorage","setItem","_id","push","alert","catch","getBreedOptions","render","event","checked"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../styles/ListPet.css';\nimport { Form, Input, TextArea, Button, Select } from 'semantic-ui-react'\nimport {speciesOption, genderOption} from './DropdownOptions';\nimport {catBreedOption, dogBreedOption, locationOption} from './DropdownOptions';\nimport {storage} from '../../firebase/firebase'\nimport history from './history';\n\nclass ListPet extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            species: '',\n            breed: '',\n            name: '',\n            sex: '',\n            dob: '',\n            price: '',\n            contact_phone: '',\n            detail: '',\n            image: '',\n            location: '',\n            \n            term_condition: false,\n            name_error: false,\n            species_error: false,\n            sex_error: false,\n            dob_error: false,\n            price_error: false,\n            detail_error: false,\n            contact_phone_error: false,\n            location_error: false,\n            term_condition_error: false,\n        }\n    }\n\n    handleChange = (value, state) => {\n        this.setState({\n            [state]: value,\n            [state + \"_error\"]: false,\n        })\n    }\n\n    handleChangeImage = e => {\n        this.setState({\n            image: e.target.files[0]\n        })\n    }\n\n    isDOBValid = () => {\n        var regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\n        if(!this.state.dob.match(regEx)) return false;  // Invalid format\n        var d = new Date(this.state.dob);\n        var dNum = d.getTime();\n        if(!dNum && dNum !== 0) return false; // NaN value, Invalid date\n        return d.toISOString().slice(0,10) === this.state.dob;\n    }\n\n    isPriceValid = () => {\n        return !isNaN(this.state.price) && !isNaN(parseInt(this.state.price))\n    }\n\n    isContactValid = () => {\n        let valid = true\n\n        if (this.state.contact_phone.length !== 10) {\n            valid = false\n        }\n\n        for (var i = 0; i < this.state.contact_phone.length; i++) {\n            if (isNaN(this.state.contact_phone[i]) || isNaN(parseInt(this.state.contact_phone[i]))) {\n                valid = false\n            }\n        }\n         \n\n        return valid\n    }\n\n    validateForm = () => {\n        let err = false\n\n        if (this.state.name === '') {\n            this.setState({name_error: true})\n            \n            err = true\n        }\n        if (this.state.species === '') {\n            this.setState({species_error: true})\n            \n            err = true\n        }\n        if (this.state.sex === '') {\n            this.setState({sex_error: true})\n            \n            err = true\n        }\n        if (this.state.dob === '' || !this.isDOBValid()) {\n            this.setState({dob_error: true})\n            \n            err = true\n        }\n        if (this.state.price === '' || !this.isPriceValid()) {\n            this.setState({price_error: true})\n            \n            err = true\n        }\n        if (this.state.detail === '') {\n            this.setState({detail_error: true})\n            \n            err = true\n        }\n        if (this.state.contact_phone === '' || !this.isContactValid()) {\n            this.setState({contact_phone_error: true})\n            \n            err = true\n        }\n        if (this.state.location === '') {\n            this.setState({location_error: true})\n            \n            err = true\n        }\n        if (this.state.term_condition === false) {\n            this.setState({\n                term_condition_error: true\n            })\n\n            err = true\n        }\n\n        return !err\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (this.validateForm()) {\n            const uploadTask = storage.ref(`/images/${this.state.name}_${this.state.contact_phone}`).put(this.state.image)\n            uploadTask.on('state_changed', \n                (snapShot) => {\n                    //takes a snap shot of the process as it is happening\n                    console.log(snapShot)\n                }, (err) => {\n                    //catches the errors\n                    console.log(err)\n                }, () => {\n                    // gets the functions from storage refences the image storage in firebase by the children\n                    // gets the download url then sets the image from firebase as the value for the imgUrl key:\n                    storage.ref('images').child(`${this.state.name}_${this.state.contact_phone}`).getDownloadURL()\n                    .then(fireBaseUrl => {\n                        fetch('http://localhost:8081/listpet', {\n                            method: 'POST',\n                            body: JSON.stringify({\n                                species: this.state.species,\n                                breed: this.state.breed,\n                                name: this.state.name,\n                                sex: this.state.sex,\n                                dob: this.state.dob,\n                                price: this.state.price,\n                                contact_phone: this.state.contact_phone,\n                                detail: this.state.detail,\n                                image_url: fireBaseUrl,\n                                location: this.state.location,\n                            }),\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Access-Control-Allow-Origin': '*',\n                                'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE',\n                            }\n                        })\n                            .then(async response => {\n                                if (response.status === 201) {\n                                    let pet = await response.json()\n                                    console.log(pet)\n                                    localStorage.setItem(\"selectedPetID\", pet._id);\n                                    history.push('/allpets/' + pet._id)\n                                }\n                                else {\n                                    alert(\"Submit failed\")\n                                }\n                            })\n                            .catch((err) => console.log(err))\n                    })\n                })\n        }\n    }\n\n    getBreedOptions = () => {\n        if (this.state.species === \"Cat\") {\n            return catBreedOption\n        } else if (this.state.species === \"Dog\") {\n            return dogBreedOption\n        }\n\n        return []\n    }\n\n    render() {\n        return (\n            <div id=\"smallest-page-container\">\n                <h1 className=\"title\">\n                    Having a pet to sell? List your pet here!\n                </h1>\n                <Form>\n                    <Form.Group widths='equal'>\n                        <Form.Field\n                            control={Input}\n                            label='Pet Name'\n                            onChange={(event, {value}) => this.handleChange(value, \"name\")}\n                            placeholder='e.g. Max'\n                            error={this.state.name_error}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label='Pet Species'\n                            options={speciesOption}\n                            onChange={(event, {value}) => this.handleChange(value, \"species\")}\n                            placeholder='e.g. Cat'\n                            error={this.state.species_error}\n                        />\n                        <Form.Field\n                            control={Select}\n                            options={this.getBreedOptions()}\n                            label='Pet Breed'\n                            onChange={(event, {value}) => this.handleChange(value, \"breed\")}\n                            placeholder='e.g. Ragdoll'\n                            search\n                        />\n                    </Form.Group>\n                    <Form.Group widths='equal'>\n                        <Form.Field\n                            control={Select}\n                            label='Pet Sex'\n                            options={genderOption}\n                            onChange={(event, {value}) => this.handleChange(value, \"sex\")}\n                            placeholder='e.g. Male'\n                            error={this.state.sex_error}\n                        />\n                        <Form.Field\n                            control={Input}\n                            label='Pet DOB (YYYY-MM-DD)'\n                            onChange={(event, {value}) => this.handleChange(value, \"dob\")}\n                            placeholder='e.g. 2021-02-03'\n                            error={this.state.dob_error}\n                        />\n                        <Form.Field\n                            control={Input}\n                            label='Pet Price ($)'\n                            onChange={(event, {value}) => this.handleChange(value, \"price\")}\n                            placeholder='e.g. 1500'\n                            error={this.state.price_error}\n                        />\n                    </Form.Group>\n                    <Form.Field\n                        control={TextArea}\n                        label='Details about the pet'\n                        onChange={(event, {value}) => this.handleChange(value, \"detail\")}\n                        placeholder='e.g. temperament, parents...'\n                        error={this.state.detail_error}\n                    />\n                    <Form.Group widths='equal'>\n                        <Form.Field\n                            control={Input}\n                            label='Contact Number'\n                            onChange={(event, {value}) => this.handleChange(value, \"contact_phone\")}\n                            placeholder='e.g. 2179792367'\n                            error={this.state.contact_phone_error}\n                        />\n                        <Form.Field\n                            control={Select}\n                            label='Location'\n                            options={locationOption}\n                            onChange={(event, {value}) => this.handleChange(value, \"location\")}\n                            search\n                            placeholder='e.g. Illinois'\n                            error={this.state.location_error}\n                        />\n                    </Form.Group>\n                    <Form.Field\n                        label='Image'\n                    />\n                    <input type=\"file\" name=\"file\" id=\"input-file\" onChange={this.handleChangeImage} />\n                    <Form.Checkbox\n                        label='I agree to the Terms and Conditions'\n                        onChange={(event, {checked}) => this.handleChange(checked, \"term_condition\")}\n                        error={this.state.term_condition_error}\n                    />\n                    <Form.Field\n                        id='list-pet-submit-button'\n                        control={Button}\n                        content='Submit'\n                        onClick={this.handleSubmit}\n                    />\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default ListPet;"]},"metadata":{},"sourceType":"module"}