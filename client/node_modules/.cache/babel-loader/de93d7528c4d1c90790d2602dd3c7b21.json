{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Desktop/CS396-PetsFinder/client/src/component/SearchResult.js\";\nimport React, { Component } from 'react';\nimport '../styles/SearchResult.css';\nimport { Button, Dropdown, Radio } from \"semantic-ui-react\";\nimport Pet from './Pet';\nimport history from './history';\nimport CheckBox from './CheckBox';\nimport { sortOption } from './DropdownOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst parseQueryParameter = q => {\n  let qs = q.replace(\"?\", \"\").split(\"&\");\n  let params = {};\n  qs.forEach(param => {\n    param = param.split(\"=\");\n\n    if (param[1] !== \"\") {\n      params[param[0]] = param[1].replaceAll(\"%20\", \" \");\n    }\n  });\n  return params;\n};\n\nconst joinQueryParameter = params => {\n  let res = \"?\";\n\n  for (let [key, value] of Object.entries(params)) {\n    res += key + \"=\" + value + \"&\";\n  }\n\n  return res.slice(0, -1);\n};\n\nclass SearchResult extends Component {\n  constructor() {\n    super();\n\n    this.fetchPets = params => {\n      fetch(\"http://localhost:8081/filterpet\", {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE'\n        }\n      }).then(async response => {\n        let data = await response.json();\n\n        if (response.status === 404) {\n          this.setState({\n            err: data.message\n          });\n        } else if (response.status === 200) {\n          this.state.ranges.map(range => {\n            const res = data.filter(pet => pet.price >= range.min && pet.price < range.max);\n            range.arr = res;\n          });\n          this.setState({\n            pets: data\n          });\n          this.setState({\n            curpets: data\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          err: err.message\n        });\n      });\n    };\n\n    this.handleSexChange = (e, {\n      value\n    }) => {\n      this.setState({\n        sex: value\n      });\n      let params = parseQueryParameter(this.props.location.search);\n      params['sex'] = value;\n      this.props.history.push(this.props.location.pathname + joinQueryParameter(params));\n      this.fetchPets(params);\n    };\n\n    this.uncheck = e => {\n      this.setState({\n        sex: ''\n      });\n      let params = parseQueryParameter(this.props.location.search);\n      delete params['sex'];\n      this.props.history.push(this.props.location.pathname + joinQueryParameter(params));\n      this.fetchPets(params);\n    };\n\n    this.toggle = event => {\n      let ranges = this.state.ranges;\n      let queryRange = [];\n      ranges.forEach(range => {\n        if (range.value === event.target.value) {\n          range.isChecked = event.target.checked;\n        }\n\n        if (range.isChecked) {\n          queryRange.push(range.min + \"-\" + range.max);\n        }\n      });\n      this.setState({\n        ranges: ranges\n      });\n      let params = parseQueryParameter(this.props.location.search);\n      delete params['price'];\n      if (queryRange.length !== 0) params['price'] = queryRange.join(\",\");\n      this.props.history.push(this.props.location.pathname + joinQueryParameter(params));\n      this.fetchPets(params);\n    };\n\n    this.handleSort = value => {\n      let array = this.state.curpets;\n\n      if (value === \"ascending\") {\n        array.sort((a, b) => a.price > b.price ? 1 : -1);\n      } else if (value === \"descending\") {\n        array.sort((a, b) => a.price > b.price ? -1 : 1);\n      }\n\n      this.setState({\n        curpets: array\n      });\n    };\n\n    this.state = {\n      pets: [],\n      curpets: [],\n      sex: '',\n      price: '',\n      species: '',\n      breed: '',\n      location: '',\n      ranges: [{\n        id: 1,\n        min: 0,\n        max: 100,\n        isChecked: false,\n        value: \"Under $100.00\",\n        arr: []\n      }, {\n        id: 2,\n        min: 100,\n        max: 500,\n        isChecked: false,\n        value: \"$100.00 to $500.00\",\n        arr: []\n      }, {\n        id: 3,\n        min: 500,\n        max: 1000,\n        isChecked: false,\n        value: \"$500.00 to $1000.00\",\n        arr: []\n      }, {\n        id: 4,\n        min: 1000,\n        max: 1500,\n        isChecked: false,\n        value: \"$1000.00 to $1500.00\",\n        arr: []\n      }, {\n        id: 5,\n        min: 1500,\n        max: 3000,\n        isChecked: false,\n        value: \"$1500.00 to $3000.00\",\n        arr: []\n      }, {\n        id: 6,\n        min: 3000,\n        max: 9999,\n        isChecked: false,\n        value: \"Above $3000.00\",\n        arr: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.state === undefined) {\n      console.log(\"search from the home page\");\n      let params = parseQueryParameter(this.props.location.search);\n\n      if (params.species !== undefined) {\n        this.state.species = params.species;\n      }\n\n      if (params.breed !== undefined) {\n        this.state.breed = params.breed;\n      }\n\n      if (params.location !== undefined) {\n        this.state.location = params.location;\n      }\n\n      if (params.sex !== undefined) {\n        this.state.sex = params.sex;\n      }\n\n      if (params.price !== undefined) {\n        let queryPrice = params.price.split(\",\");\n        let ranges = this.state.ranges;\n\n        for (let i = 0; i < queryPrice.length; i++) {\n          let [currMin, currMax] = queryPrice[i].split(\"-\");\n\n          for (let j = 0; j < ranges.length; j++) {\n            if (parseInt(currMin) === ranges[j].min && parseInt(currMax) === ranges[j].max) {\n              ranges[j].isChecked = true;\n            }\n          }\n        }\n\n        console.log(ranges);\n        this.setState({\n          ranges: ranges\n        });\n      }\n\n      this.fetchPets(params);\n    } else {\n      console.log(\"passed state are: \", this.props.location.state);\n      let params = parseQueryParameter(this.props.location.search);\n      console.log(\"here is the params\", params);\n\n      if (params.species !== undefined) {\n        this.state.species = params.species;\n      }\n\n      if (params.breed !== undefined) {\n        this.state.breed = params.breed;\n      }\n\n      if (params.location !== undefined) {\n        this.state.location = params.location;\n      }\n\n      if (params.sex !== undefined) {\n        this.state.sex = params.sex;\n      }\n\n      this.setState({\n        pets: this.props.location.state.allpets\n      });\n      this.setState({\n        curpets: this.props.location.state.curpets\n      });\n      this.setState({\n        ranges: this.props.location.state.ranges\n      });\n      console.log(\"allpets are: \", this.props.location.state.allpets);\n      console.log(\"curpets are: \", this.props.location.state.curpets);\n      console.log(\"ranges are: \", this.props.location.state.ranges);\n    }\n  }\n\n  render() {\n    let pets = this.state.curpets;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pets.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"smallest-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-container err\",\n          children: \"Sorry, there is no matching pet available!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"smallest-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-container result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"filter-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select the Price Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price-checkbox\",\n              children: this.state.ranges.map(range => {\n                return /*#__PURE__*/_jsxDEV(CheckBox, {\n                  toggle: this.toggle,\n                  range: range\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 57\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Choose the Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              label: \"Male\",\n              name: \"radioGroup\",\n              value: \"Male\",\n              onChange: this.handleSexChange,\n              checked: this.state.sex === 'Male'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              label: \"Female\",\n              name: \"radioGroup\",\n              value: \"Female\",\n              onChange: this.handleSexChange,\n              checked: this.state.sex === 'Female'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.uncheck,\n                children: \" Clear Sex \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Sort Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Dropdown, {\n                onChange: (e, {\n                  value\n                }) => this.handleSort(value),\n                placeholder: \"Sort\",\n                selection: true,\n                options: sortOption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"search-result-section\",\n            children: pets.map(pet => /*#__PURE__*/_jsxDEV(Pet, {\n              pet: pet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/jerry/Desktop/CS396-PetsFinder/client/src/component/SearchResult.js"],"names":["React","Component","Button","Dropdown","Radio","Pet","history","CheckBox","sortOption","parseQueryParameter","q","qs","replace","split","params","forEach","param","replaceAll","joinQueryParameter","res","key","value","Object","entries","slice","SearchResult","constructor","fetchPets","fetch","method","body","JSON","stringify","headers","then","response","data","json","status","setState","err","message","state","ranges","map","range","filter","pet","price","min","max","arr","pets","curpets","catch","handleSexChange","e","sex","props","location","search","push","pathname","uncheck","toggle","event","queryRange","target","isChecked","checked","length","join","handleSort","array","sort","a","b","species","breed","id","componentDidMount","undefined","console","log","queryPrice","i","currMin","currMax","j","parseInt","allpets","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '../styles/SearchResult.css'\nimport { Button, Dropdown, Radio } from \"semantic-ui-react\";\nimport Pet from './Pet';\nimport history from './history';\nimport CheckBox from './CheckBox';\nimport { sortOption } from './DropdownOptions';\n\n\nconst parseQueryParameter = q => {\n    let qs = q.replace(\"?\", \"\").split(\"&\")\n    let params = {}\n\n    qs.forEach(param => {\n        param = param.split(\"=\")\n        \n        if (param[1] !== \"\") {\n            params[param[0]] = param[1].replaceAll(\"%20\", \" \")\n        }\n        \n    });\n\n    return params\n}\n\nconst joinQueryParameter = params => {\n    let res = \"?\"\n\n    for (let [key, value] of Object.entries(params)) {\n        res += key + \"=\" + value + \"&\"\n    }\n\n    return res.slice(0, -1)\n}\n\nclass SearchResult extends Component {\n    constructor() {\n        super();\n        this.state = {\n            pets: [],\n            curpets: [],\n            sex: '',\n            price: '',\n            species: '',\n            breed: '',\n            location: '',\n            ranges: [\n                { id: 1, min: 0, max: 100, isChecked: false, value: \"Under $100.00\", arr: [] },\n                { id: 2, min: 100, max: 500, isChecked: false, value: \"$100.00 to $500.00\", arr: [] },\n                { id: 3, min: 500, max: 1000, isChecked: false, value: \"$500.00 to $1000.00\", arr: [] },\n                { id: 4, min: 1000, max: 1500, isChecked: false, value: \"$1000.00 to $1500.00\", arr: [] },\n                { id: 5, min: 1500, max: 3000, isChecked: false, value: \"$1500.00 to $3000.00\", arr: [] },\n                { id: 6, min: 3000, max: 9999, isChecked: false, value: \"Above $3000.00\", arr: [] }\n            ]\n        }\n    }\n    \n    componentDidMount() {\n        if (this.props.location.state === undefined) {\n            console.log(\"search from the home page\");\n\n            let params = parseQueryParameter(this.props.location.search)\n \n            if (params.species !== undefined) {\n                this.state.species = params.species;\n            }\n            if (params.breed !== undefined) {\n                this.state.breed = params.breed;\n            }\n            if (params.location !== undefined) {\n                this.state.location = params.location;\n            }\n            if (params.sex !== undefined) {\n                this.state.sex = params.sex;\n            }\n            if (params.price !== undefined) {\n                let queryPrice = params.price.split(\",\")\n                let ranges = this.state.ranges\n\n                for (let i = 0; i < queryPrice.length; i++) {\n                    let [currMin, currMax] = queryPrice[i].split(\"-\")\n\n                    for (let j = 0; j < ranges.length; j++) {\n                        if (parseInt(currMin) === ranges[j].min && parseInt(currMax) === ranges[j].max) {\n                            ranges[j].isChecked = true\n                        }\n                    }\n                }\n\n                console.log(ranges)\n                \n                this.setState({ranges: ranges})\n            }\n            \n            this.fetchPets(params)\n\n        } else {\n            console.log(\"passed state are: \", this.props.location.state);\n            let params = parseQueryParameter(this.props.location.search)\n            console.log(\"here is the params\", params);\n            if (params.species !== undefined) {\n                this.state.species = params.species;\n            }\n            if (params.breed !== undefined) {\n                this.state.breed = params.breed;\n            }\n            if (params.location !== undefined) {\n                this.state.location = params.location;\n            }\n            if (params.sex !== undefined) {\n                this.state.sex = params.sex;\n            }\n            this.setState({pets: this.props.location.state.allpets})\n            this.setState({curpets: this.props.location.state.curpets});\n            this.setState({ranges: this.props.location.state.ranges});\n            console.log(\"allpets are: \", this.props.location.state.allpets);\n            console.log(\"curpets are: \", this.props.location.state.curpets);\n            console.log(\"ranges are: \", this.props.location.state.ranges);\n        }\n    }\n\n    fetchPets = (params) => {\n        fetch(\"http://localhost:8081/filterpet\", {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE',\n            }\n        })\n        .then(async response => {\n            let data = await response.json()\n            if (response.status === 404) {\n                this.setState({err: data.message});\n            } else if (response.status === 200) {\n                this.state.ranges.map((range) => {\n                    const res = data.filter(pet => pet.price >= range.min && pet.price < range.max);\n                    range.arr = res;\n                })\n                this.setState({pets: data});\n                this.setState({curpets: data});\n            }\n        })\n        .catch(err => {\n            this.setState({err: err.message});\n        })\n    }\n\n    handleSexChange = (e, { value }) => {\n        this.setState({sex: value});\n        let params = parseQueryParameter(this.props.location.search)\n        params['sex'] = value\n        this.props.history.push(this.props.location.pathname + joinQueryParameter(params))\n        this.fetchPets(params)\n    }\n\n    uncheck = (e) => {\n        this.setState({sex: ''});\n        let params = parseQueryParameter(this.props.location.search)\n        delete params['sex'];\n        this.props.history.push(this.props.location.pathname + joinQueryParameter(params))\n        this.fetchPets(params)\n    }\n\n    toggle = (event) => {\n        let ranges = this.state.ranges\n        let queryRange = []\n        ranges.forEach(range => {\n            if (range.value === event.target.value) {\n                range.isChecked =  event.target.checked\n            }\n            if (range.isChecked) {\n                queryRange.push(range.min + \"-\" + range.max)\n            }\n        })\n        this.setState({ranges: ranges})\n\n        let params = parseQueryParameter(this.props.location.search)\n        delete params['price']\n        if (queryRange.length !== 0)\n            params['price'] = queryRange.join(\",\")\n        this.props.history.push(this.props.location.pathname + joinQueryParameter(params))\n        this.fetchPets(params)\n    }\n\n    handleSort = (value) => {\n        let array = this.state.curpets;\n        if (value === \"ascending\") {\n            array.sort((a, b) => a.price > b.price ? 1 : -1);\n        } else if (value === \"descending\") {\n            array.sort((a, b) => a.price > b.price ? -1 : 1);\n        }\n        this.setState({curpets: array});\n    }\n\n    render() {\n        let pets = this.state.curpets;\n        return (\n            <>\n                {\n                    pets.length === 0 ? (\n                        <div id=\"smallest-page-container\">\n                            <div className=\"search-result-container err\">Sorry, there is no matching pet available!</div>\n                        </div>\n                    ) : (\n                        <div id=\"smallest-page-container\">\n                            <div className=\"search-result-container result\">\n                                <div id=\"filter-section\">\n                                    <h3>Select the Price Range</h3>\n                                    <div className=\"price-checkbox\">\n                                        {\n                                            this.state.ranges.map((range) => {\n                                                return (<CheckBox toggle={this.toggle} range={range}/>)\n                                            })\n                                        }\n                                    </div>\n\n                                    <h3>Choose the Sex</h3>\n                                    <Radio\n                                        label='Male'\n                                        name='radioGroup'\n                                        value='Male'\n                                        onChange={this.handleSexChange}\n                                        checked={this.state.sex === 'Male'}\n                                    /><br/>\n                                    <Radio\n                                        label='Female'\n                                        name='radioGroup'\n                                        value='Female'\n                                        onChange={this.handleSexChange}\n                                        checked={this.state.sex === 'Female'}\n                                    /><br/><br/>\n                                    <div>\n                                        <Button onClick={this.uncheck}> Clear Sex </Button>\n                                    </div>\n                                    <h3>Sort Price</h3>\n                                    <div>\n                                        <Dropdown\n                                            onChange={(e, {value}) => this.handleSort(value)}\n                                            placeholder=\"Sort\"\n                                            selection\n                                            options={sortOption}\n                                        />\n                                    </div>\n                                \n                                </div>\n\n\n                                <div id=\"search-result-section\">\n                                    {pets.map((pet) => (\n                                        <Pet pet={pet}/>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </>\n        )\n    }\n}\n\nexport default SearchResult;"]},"metadata":{},"sourceType":"module"}