{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Desktop/CS396-PetsFinder/client/src/component/Community.js\";\nimport React, { Component } from 'react';\nimport Pet from './Pet';\nimport { Button, Radio, Dropdown } from \"semantic-ui-react\";\nimport history from './history';\nimport CheckBox from './CheckBox';\nimport { sortOption } from './DropdownOptions';\nimport '../styles/Community.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst parseQueryParameter = q => {\n  if (q === \"\") return {};\n  let qs = q.replace(\"?\", \"\").split(\"&\");\n  let params = {};\n  qs.forEach(param => {\n    param = param.split(\"=\");\n\n    if (param[1] !== \"\") {\n      params[param[0]] = param[1].replaceAll(\"%20\", \" \");\n    }\n  });\n  return params;\n};\n\nconst joinQueryParameter = params => {\n  let res = \"?\";\n\n  for (let [key, value] of Object.entries(params)) {\n    res += key + \"=\" + value + \"&\";\n  }\n\n  return res.slice(0, -1);\n};\n\nclass Community extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchPets = params => {\n      fetch(\"http://localhost:8081/filterpet\", {\n        method: 'POST',\n        body: JSON.stringify(params),\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE'\n        }\n      }).then(async response => {\n        let data = await response.json();\n\n        if (response.status === 404) {\n          this.setState({\n            err: data.message\n          });\n        } else if (response.status === 200) {\n          this.state.ranges.map(range => {\n            const res = data.filter(pet => pet.price >= range.min && pet.price < range.max);\n            range.arr = res;\n          });\n          this.setState({\n            pets: data\n          });\n          this.setState({\n            curpets: data\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          err: err.message\n        });\n      });\n    };\n\n    this.handleSexChange = (e, {\n      value\n    }) => {\n      this.setState({\n        sex: value\n      });\n      let params = parseQueryParameter(this.props.location.search);\n      params['sex'] = value;\n      this.props.history.push(this.props.location.pathname + joinQueryParameter(params));\n      this.fetchPets(params);\n    };\n\n    this.uncheck = e => {\n      this.setState({\n        sex: ''\n      });\n      let params = parseQueryParameter(this.props.location.search);\n      delete params['sex'];\n      this.props.history.push(this.props.location.pathname + joinQueryParameter(params));\n      this.fetchPets(params);\n    };\n\n    this.toggle = event => {\n      let ranges = this.state.ranges;\n      let queryRange = [];\n      ranges.forEach(range => {\n        if (range.value === event.target.value) {\n          range.isChecked = event.target.checked;\n        }\n\n        if (range.isChecked) {\n          queryRange.push(range.min + \"-\" + range.max);\n        }\n      });\n      this.setState({\n        ranges: ranges\n      });\n      let params = parseQueryParameter(this.props.location.search);\n      delete params['price'];\n      if (queryRange.length !== 0) params['price'] = queryRange.join(\",\");\n      this.props.history.push(this.props.location.pathname + joinQueryParameter(params));\n      this.fetchPets(params);\n    };\n\n    this.handleSort = value => {\n      let array = this.state.curpets;\n\n      if (value === \"ascending\") {\n        array.sort((a, b) => a.price > b.price ? 1 : -1);\n      } else if (value === \"descending\") {\n        array.sort((a, b) => a.price > b.price ? -1 : 1);\n      }\n\n      this.setState({\n        curpets: array\n      });\n    };\n\n    this.state = {\n      pets: [],\n      curpets: [],\n      sex: '',\n      price: '',\n      ranges: [{\n        id: 1,\n        min: 0,\n        max: 100,\n        isChecked: false,\n        value: \"Under $100.00\",\n        arr: []\n      }, {\n        id: 2,\n        min: 100,\n        max: 500,\n        isChecked: false,\n        value: \"$100.00 to $500.00\",\n        arr: []\n      }, {\n        id: 3,\n        min: 500,\n        max: 1000,\n        isChecked: false,\n        value: \"$500.00 to $1000.00\",\n        arr: []\n      }, {\n        id: 4,\n        min: 1000,\n        max: 1500,\n        isChecked: false,\n        value: \"$1000.00 to $1500.00\",\n        arr: []\n      }, {\n        id: 5,\n        min: 1500,\n        max: 3000,\n        isChecked: false,\n        value: \"$1500.00 to $3000.00\",\n        arr: []\n      }, {\n        id: 6,\n        min: 3000,\n        max: 1000000000,\n        isChecked: false,\n        value: \"Above $3000.00\",\n        arr: []\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.fetchPets([]); // fetch all pets\n  }\n\n  render() {\n    let pets = this.state.curpets;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pets.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"smallest-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"search-result-container err\",\n          children: \"Sorry, there is no matching pet available!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"smallest-page-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"search-result-container result\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"filter-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Select the Price Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"price-checkbox\",\n              children: this.state.ranges.map(range => {\n                return /*#__PURE__*/_jsxDEV(CheckBox, {\n                  toggle: this.toggle,\n                  range: range\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 57\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Choose the Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              label: \"Male\",\n              name: \"radioGroup\",\n              value: \"Male\",\n              onChange: this.handleSexChange,\n              checked: this.state.sex === 'Male'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(Radio, {\n              label: \"Female\",\n              name: \"radioGroup\",\n              value: \"Female\",\n              onChange: this.handleSexChange,\n              checked: this.state.sex === 'Female'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.uncheck,\n                children: \"Clear Sex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Sort Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              onChange: (e, {\n                value\n              }) => this.handleSort(value),\n              placeholder: \"Sort\",\n              selection: true,\n              options: sortOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"search-result-section\",\n            children: pets.map(pet => /*#__PURE__*/_jsxDEV(Pet, {\n              pet: pet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Community;","map":{"version":3,"sources":["/Users/jerry/Desktop/CS396-PetsFinder/client/src/component/Community.js"],"names":["React","Component","Pet","Button","Radio","Dropdown","history","CheckBox","sortOption","parseQueryParameter","q","qs","replace","split","params","forEach","param","replaceAll","joinQueryParameter","res","key","value","Object","entries","slice","Community","constructor","props","fetchPets","fetch","method","body","JSON","stringify","headers","then","response","data","json","status","setState","err","message","state","ranges","map","range","filter","pet","price","min","max","arr","pets","curpets","catch","handleSexChange","e","sex","location","search","push","pathname","uncheck","toggle","event","queryRange","target","isChecked","checked","length","join","handleSort","array","sort","a","b","id","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Pet from './Pet';\nimport { Button, Radio, Dropdown } from \"semantic-ui-react\";\nimport history from './history';\nimport CheckBox from './CheckBox';\nimport { sortOption } from './DropdownOptions';\n\nimport '../styles/Community.css';\n\nconst parseQueryParameter = q => {\n    if (q === \"\")\n        return {}\n\n    let qs = q.replace(\"?\", \"\").split(\"&\")\n    let params = {}\n\n    qs.forEach(param => {\n        param = param.split(\"=\")\n        \n        if (param[1] !== \"\") {\n            params[param[0]] = param[1].replaceAll(\"%20\", \" \")\n        }\n        \n    });\n\n    return params\n}\n\nconst joinQueryParameter = params => {\n    let res = \"?\"\n\n    for (let [key, value] of Object.entries(params)) {\n        res += key + \"=\" + value + \"&\"\n    }\n\n    return res.slice(0, -1)\n}\n\nclass Community extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pets: [],\n            curpets: [],\n            sex: '',\n            price: '',\n            ranges: [\n                { id: 1, min: 0, max: 100, isChecked: false, value: \"Under $100.00\", arr: [] },\n                { id: 2, min: 100, max: 500, isChecked: false, value: \"$100.00 to $500.00\", arr: [] },\n                { id: 3, min: 500, max: 1000, isChecked: false, value: \"$500.00 to $1000.00\", arr: [] },\n                { id: 4, min: 1000, max: 1500, isChecked: false, value: \"$1000.00 to $1500.00\", arr: [] },\n                { id: 5, min: 1500, max: 3000, isChecked: false, value: \"$1500.00 to $3000.00\", arr: [] },\n                { id: 6, min: 3000, max: 1000000000, isChecked: false, value: \"Above $3000.00\", arr: [] }\n            ]\n        }\n    }\n\n    componentDidMount() {\n        this.fetchPets([]) // fetch all pets\n    }\n\n    fetchPets = (params) => {\n        fetch(\"http://localhost:8081/filterpet\", {\n            method: 'POST',\n            body: JSON.stringify(params),\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n                'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT, DELETE',\n            }\n        })\n        .then(async response => {\n            let data = await response.json()\n            if (response.status === 404) {\n                this.setState({err: data.message});\n            } else if (response.status === 200) {\n                this.state.ranges.map((range) => {\n                    const res = data.filter(pet => pet.price >= range.min && pet.price < range.max);\n                    range.arr = res;\n                })\n                this.setState({pets: data});\n                this.setState({curpets: data});\n            }\n        })\n        .catch(err => {\n            this.setState({err: err.message});\n        })\n    }\n\n    handleSexChange = (e, { value }) => {\n        this.setState({sex: value});\n        let params = parseQueryParameter(this.props.location.search)\n        params['sex'] = value\n        this.props.history.push(this.props.location.pathname + joinQueryParameter(params))\n        this.fetchPets(params)\n    }\n\n    uncheck = (e) => {\n        this.setState({sex: ''});\n        let params = parseQueryParameter(this.props.location.search)\n        delete params['sex'];\n        this.props.history.push(this.props.location.pathname + joinQueryParameter(params))\n        this.fetchPets(params)\n    }\n\n    toggle = (event) => {\n        let ranges = this.state.ranges\n        let queryRange = []\n        ranges.forEach(range => {\n            if (range.value === event.target.value) {\n                range.isChecked =  event.target.checked\n            }\n            if (range.isChecked) {\n                queryRange.push(range.min + \"-\" + range.max)\n            }\n        })\n        this.setState({ranges: ranges})\n\n        let params = parseQueryParameter(this.props.location.search)\n        delete params['price']\n        if (queryRange.length !== 0)\n            params['price'] = queryRange.join(\",\")\n        this.props.history.push(this.props.location.pathname + joinQueryParameter(params))\n        this.fetchPets(params)\n    }\n    \n    handleSort = (value) => {\n        let array = this.state.curpets;\n        if (value === \"ascending\") {\n            array.sort((a, b) => a.price > b.price ? 1 : -1);\n        } else if (value === \"descending\") {\n            array.sort((a, b) => a.price > b.price ? -1 : 1);\n        }\n        this.setState({curpets: array});\n    }\n\n    render() {\n        let pets = this.state.curpets;\n        \n        return (\n            <>\n                {\n                    pets.length === 0 ? (\n                        <div id=\"smallest-page-container\">\n                            <div class=\"search-result-container err\">Sorry, there is no matching pet available!</div>\n                        </div>\n                    ) : (\n                        <div id=\"smallest-page-container\">\n                            <div class=\"search-result-container result\">\n                                <div id=\"filter-section\">\n                                    <h3>Select the Price Range</h3>\n                                    <div className=\"price-checkbox\">\n                                        {\n                                            this.state.ranges.map((range) => {\n                                                return (<CheckBox toggle={this.toggle} range={range}/>)\n                                            })\n                                        }\n                                    </div>\n\n                                    <h3>Choose the Sex</h3>\n                                    <Radio\n                                        label='Male'\n                                        name='radioGroup'\n                                        value='Male'\n                                        onChange={this.handleSexChange}\n                                        checked={this.state.sex === 'Male'}\n                                    /><br/>\n                                    <Radio\n                                        label='Female'\n                                        name='radioGroup'\n                                        value='Female'\n                                        onChange={this.handleSexChange}\n                                        checked={this.state.sex === 'Female'}\n                                    /><br/><br/>\n                                    <div>\n                                        <Button onClick={this.uncheck}>Clear Sex</Button>\n                                    </div>\n                                    <h3>Sort Price</h3>\n                                    <Dropdown\n                                            onChange={(e, {value}) => this.handleSort(value)}\n                                            placeholder=\"Sort\"\n                                            selection\n                                            options={sortOption}\n                                        />\n                                </div>\n                                <div id=\"search-result-section\">\n                                    {pets.map((pet) => (\n                                        <Pet pet={pet}/>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </>\n        )\n    }\n}\n\nexport default Community;"]},"metadata":{},"sourceType":"module"}